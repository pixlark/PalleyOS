info registers eax
info registers *eax
x/x *$eax
x/x eax
x/x $eax
b readStatus 
c
layout asm
si
info registers ax
si
info registers al
info registers ax
b readStatus 
c
layout asm
info registers eax
x/x eax
x/x $eax
si
x/x $eax
si
x/x $eax
b ideInit 
c
n
p data 
s
n
c
b ataWrite
c
n
p lba
n
p lba_high
p lba_high_es
p lba_high_ext
n
p drive_select_and_high_bits 
x/x drive_select_and_high_bits 
n
p poll
n
p lba_low 
p lba
x/x lba
x/x lba_mid
n
c
n
b ideIRQISR 
c
b ataWrite
c
n
p num_sectors 
p sector_num 
n
p lba
b ataWrite
c
b ataWrite
c
n
b ide.c:431
c
n
p poll
c
b ide.c:424
c
si
s
s
n
x/s &to_write 
p *data
x/2s (&to_write 
x/2s (&to_write) 
n
p to_write 
x/s &to_write 
c
b ataIdentify 
c
n
p poll
b ataIdentify 
c
n
p poll
n
p poll 
n
p oll
p poll
n
p i
b ide.c:341
n
c
n
b ataIdentify 
c
n
p poll
n
b ide.c:341
c
n
p poll
n
c
b ataWrite
c
n
p poll
n
quit
b ataRead
c
n
p poll
b ataRead
c
n
p poll
n
c
b ataRead
c
n
n
p poll
n
p poll
n
b ataRead
c
n
p lba_mid 
n
p tmp
x/s &tmp
x/s itr
n
x/s tmp
x/s itr
n
x/s data
b ide.c:542
c
n
p poll
quit
b ide.c:542
c
n
p poll
c
p poll
b ataWrite
c
n
p poll
n
n
p poll
n
p data
p to_write
x/s &to_write 
b ide.c:445
c
s
n
p poll
n
c
b ataRead
c
n
n
p tmp
p poll
quit
b ide.c:535
c
b ide.c:545
b ide.c:535
c
n
p poll
n
p poll
n
si
n
p poll
n
c
quit
b ataWrite
c
b ataIdentify 
c
n
p poll
n
b ataIdentify 
c
n
b ataWrite
c
nm
n
b ide.c:547
c
n
p poll
n
p poll
n
p poll
p poll.data_transfer_requested != 1
n
b ataWrite
c
n
b ide.c:549
c
n
p poll
n
n
layout asm
si
n
n
p poll
b ide.c: 550
c
p poll
n
quit
b user_mode_func_test 
c
s
layout asm
si
b user_mode_func_test 
c
c
layout asm
si
